CREATE OR REPLACE PROCEDURE RETURN_ORDER (INV_ID INVOICE_ORDER.INVOICE_ID%TYPE, RET_DATE INVOICE_ORDER.ORDER_DATE%TYPE) AS
RET_DAYS INT;
ORD_DATE INVOICE_ORDER.ORDER_DATE%TYPE;
S_ID STORE.STORE_ID%TYPE;
AMT INVOICE_ORDER.SALE_AMT%TYPE;
BEGIN
SELECT ORDER_DATE INTO ORD_DATE FROM INVOICE_ORDER WHERE INVOICE_ID = INV_ID;
SELECT ROUND(TO_NUMBER(RET_DATE - ORD_DATE)) INTO RET_DAYS FROM DUAL;
SELECT STORE_ID INTO S_ID FROM INVOICE_ORDER WHERE INVOICE_ID = INV_ID;
IF RET_DAYS > 14 THEN 
    DBMS_OUTPUT.PUT_LINE('Cannot return the product as 2 weeks have passed');
ELSE
    MERGE INTO STORE_STOCK S
    USING (SELECT INVOICE_ID, PRODUCT_ID, QUANTITY FROM INVOICE_ORDER_DETAILS WHERE INVOICE_ID = INV_ID) INV_OR_D
    ON (S.PRODUCT_ID = INV_OR_D.PRODUCT_ID)
    WHEN MATCHED THEN UPDATE SET S.QTY = S.QTY + INV_OR_D.QUANTITY
    WHERE S.STORE_ID = S_ID;
    
    
    
    MERGE INTO INVOICE_ORDER INV_OR
    USING (SELECT INVOICE_ID FROM RETURN_INVOICE) R_I
    ON (INV_OR.INVOICE_ID = R_I.INVOICE_ID)
    WHEN MATCHED THEN UPDATE SET INV_OR.RETURN_FLAG = 'TRUE';


    
    SELECT SALE_AMT INTO AMT FROM INVOICE_ORDER WHERE INVOICE_ID = INV_ID;
    INSERT INTO RETURN_INVOICE(INVOICE_ID, RETURN_DATE, RETURN_AMT) VALUES(INV_ID, RET_DATE, AMT);
    
END IF;
END;